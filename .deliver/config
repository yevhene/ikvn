APP="ikvn"

BUILD_HOST="ikvn.rocks"
BUILD_USER="ikvn"
BUILD_AT="/tmp/${APP}/builds"

PRODUCTION_HOSTS="ikvn.rocks"
PRODUCTION_USER="ikvn"
DELIVER_TO="/home/ikvn/app"

BUILD_CMD=mix
RELEASE_CMD=mix
USING_DISTILLERY=true

pre_erlang_clean_compile() {
  status "Assets: Installing NPM dependencies"
  __sync_remote "  # runs the commands on the build host
    [ -f ~/.profile ] && source ~/.profile # load profile
    set -e # fail if any command fails

    cd '$BUILD_AT/assets' # go to the build directory on the build host
    npm install $SILENCE
  "

  status "Assets: Building Webpack"
  __sync_remote "  # runs the commands on the build host
    [ -f ~/.profile ] && source ~/.profile # load profile
    set -e # fail if any command fails

    cd '$BUILD_AT/assets' # go to the build directory on the build host
    node_modules/.bin/webpack --mode production --silent
  "

  status "Assets: Running phoenix.digest" # log output prepended with "----->"
  __sync_remote " # runs the commands on the build host
    [ -f ~/.profile ] && source ~/.profile # load profile (optional)
    set -e # fail if any command fails (recommended)

    cd '$BUILD_AT' # enter the build directory on the build host (required)
    # prepare something
    mkdir -p priv/static # required by the phoenix.digest task
    # run your custom task
    APP='$APP' MIX_ENV='$TARGET_MIX_ENV' $MIX_CMD phx.digest $SILENCE
  "
}
